{"version":3,"sources":["","../src/utils.tsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","React","Row","defaultActiveColor","defaultAlertColor","defaultInactiveColor","Circle","size","color","margin","children","style","createElement","assign","width","height","backgroundColor","borderRadius","onKeyboardClick","key","fn","ClickableRow","_a","onClick","disabled","props","role","cursor","tabIndex","onKeyPress","VerticalLine","position","top","left","bottom","heigth"],"mappings":"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","file":"utils.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport { Row } from 'styled-material/cjs/layout';\nexport const defaultActiveColor = '#3f51b5';\nexport const defaultAlertColor = '#f44336';\nexport const defaultInactiveColor = '#bdbdbd';\n/**\n * A simple circle, used for step icons and by the dot tracker.\n */\nexport const Circle = ({ size, color, margin, children, style }) => (React.createElement(\"div\", { children: children, style: Object.assign({ margin, width: size, height: size, backgroundColor: color, borderRadius: '50%' }, style) }));\n/**\n * A function to filter keyboard events to spacebar and Enter\n */\nexport const onKeyboardClick = fn => (e) => {\n    if (e.key === ' ' || e.key === 'Enter') {\n        return fn(e);\n    }\n};\n/**\n * A flexbox row that is focusable and clickable like a button\n */\nexport const ClickableRow = (_a) => {\n    var { onClick, disabled, style } = _a, props = __rest(_a, [\"onClick\", \"disabled\", \"style\"]);\n    return (React.createElement(Row, Object.assign({ role: !disabled && 'button', style: Object.assign({ cursor: disabled ? 'default' : 'pointer' }, style), tabIndex: disabled ? -1 : 0, onClick: onClick, onKeyPress: onKeyboardClick(onClick) }, props)));\n};\n/**\n * A simple vertical line, used for constructing the vertical stepper\n */\nexport const VerticalLine = () => (React.createElement(\"div\", { style: {\n        position: 'absolute',\n        top: 0,\n        left: 36,\n        bottom: 16,\n        heigth: '100%',\n        width: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    } }));\n","import React, {CSSProperties, ReactChild} from 'react'\nimport {Row} from 'styled-material/cjs/layout'\n\nexport const defaultActiveColor = '#3f51b5'\nexport const defaultAlertColor = '#f44336'\nexport const defaultInactiveColor = '#bdbdbd'\n\nexport type CircleProps = {\n  color: string\n  size: number\n  margin?: number\n  children?: ReactChild\n  style?: CSSProperties\n}\n\n/**\n * A simple circle, used for step icons and by the dot tracker.\n */\nexport const Circle = ({size, color, margin, children, style}: CircleProps) => (\n  <div\n    children={children}\n    style={{\n      margin,\n      width: size,\n      height: size,\n      backgroundColor: color,\n      borderRadius: '50%',\n      ...style,\n    }}\n  />\n)\n\n/**\n * A function to filter keyboard events to spacebar and Enter\n */\nexport const onKeyboardClick = fn => (e: React.KeyboardEvent<any>) => {\n  if (e.key === ' ' || e.key === 'Enter') {\n    return fn(e)\n  }\n}\n\n/**\n * A flexbox row that is focusable and clickable like a button\n */\nexport const ClickableRow = ({onClick, disabled, style, ...props}) => (\n  <Row\n    role={!disabled && 'button'}\n    style={{\n      cursor: disabled ? 'default' : 'pointer',\n      ...style,\n    }}\n    tabIndex={disabled ? -1 : 0}\n    onClick={onClick}\n    onKeyPress={onKeyboardClick(onClick)}\n    {...props}\n  />\n)\n\n/**\n * A simple vertical line, used for constructing the vertical stepper\n */\nexport const VerticalLine = () => (\n  <div\n    style={{\n      position: 'absolute',\n      top: 0,\n      left: 36,\n      bottom: 16,\n      heigth: '100%',\n      width: 1,\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    }}\n  />\n)\n"]}