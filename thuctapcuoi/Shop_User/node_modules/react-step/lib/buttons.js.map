{"version":3,"sources":["","../src/buttons.tsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","React","compose","setDisplayName","withStepper","AdvanceButton","_a","component","Button","_","canReverse","__","pageState","___","setPageState","pages","canAdvance","canFinish","currentPage","setPageIndex","disabled","onClick","onNext","onFinish","finishLabel","children","props","isLast","createElement","assign","returnValue","ReverseButton","____","_____","onPrevious","onCancel","cancelLabel"],"mappings":"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","file":"buttons.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport { compose, setDisplayName } from 'recompose';\nimport { withStepper } from './with-stepper';\n/**\n * Renders a button to go to the next step\n *\n * ### Usage\n * ```\n * <AdvanceButton>\n *   Next\n * </AdvanceButton>\n * ```\n */\nexport const AdvanceButton = compose(withStepper, setDisplayName('AdvanceButton'))((_a) => {\n    var { component: Button = 'button', canReverse: _, pageState: __, setPageState: ___, pages, canAdvance, canFinish, currentPage, setPageIndex, disabled, onClick, onNext, onFinish, finishLabel, children } = _a, props = __rest(_a, [\"component\", \"canReverse\", \"pageState\", \"setPageState\", \"pages\", \"canAdvance\", \"canFinish\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onNext\", \"onFinish\", \"finishLabel\", \"children\"]);\n    const isLast = finishLabel && currentPage + 1 >= pages.length;\n    return (React.createElement(Button, Object.assign({ disabled: disabled || (isLast ? !canFinish : !canAdvance) }, props, { onClick: e => {\n            let returnValue;\n            if (currentPage + 1 >= pages.length) {\n                if (onFinish) {\n                    returnValue = onFinish();\n                }\n            }\n            else {\n                if (onNext) {\n                    returnValue = onNext();\n                }\n                setPageIndex(currentPage + 1);\n            }\n            return onClick ? onClick(e) : returnValue;\n        } }), finishLabel && currentPage + 1 >= pages.length ? (finishLabel) : (children)));\n});\n/**\n * Renders a button to go to the previous step\n *\n * ### Usage\n * ```\n * <ReverseButton>\n *   Back\n * </ReverseButton>\n * ```\n */\nexport const ReverseButton = compose(withStepper, setDisplayName('ReverseButton'))((_a) => {\n    var { component: Button = 'button', canAdvance: _, pages: __, pageState: ___, setPageState: ____, canFinish: _____, canReverse, currentPage, setPageIndex, disabled, onClick, onPrevious, onCancel, cancelLabel, children } = _a, props = __rest(_a, [\"component\", \"canAdvance\", \"pages\", \"pageState\", \"setPageState\", \"canFinish\", \"canReverse\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onPrevious\", \"onCancel\", \"cancelLabel\", \"children\"]);\n    return (React.createElement(Button, Object.assign({ disabled: disabled || (!cancelLabel && !canReverse) }, props, { onClick: e => {\n            let returnValue;\n            if (currentPage <= 0) {\n                if (onCancel) {\n                    returnValue = onCancel();\n                }\n            }\n            else {\n                if (onPrevious) {\n                    returnValue = onPrevious();\n                }\n                setPageIndex(currentPage - 1);\n            }\n            return onClick ? onClick(e) : returnValue;\n        } }), cancelLabel && currentPage <= 0 ? cancelLabel : children));\n});\n","import React, {\n  DOMAttributes,\n  ReactChild,\n  ReactType,\n  StatelessComponent,\n} from 'react'\nimport {compose, setDisplayName} from 'recompose'\nimport {withStepper} from './with-stepper'\n\nexport type AdvanceButtonProps = {\n  /**\n   * The component to render, it defaults to a browser <button> element.\n   */\n  component?: ReactType\n  /**\n   * Callback when the button is used to finish the stepper\n   */\n  onFinish?: () => void\n  /**\n   * Callback when the button is used to go to the next page\n   */\n  onNext?: () => void\n  /**\n   * A label to show instead of the children when the stepper\n   * is on the last page.\n   */\n  finishLabel?: ReactChild\n}\n\n/**\n * Renders a button to go to the next step\n *\n * ### Usage\n * ```\n * <AdvanceButton>\n *   Next\n * </AdvanceButton>\n * ```\n */\nexport const AdvanceButton: StatelessComponent<\n  AdvanceButtonProps & DOMAttributes<HTMLButtonElement>\n> = compose(\n  withStepper,\n  setDisplayName('AdvanceButton'),\n)(\n  ({\n    component: Button = 'button',\n    canReverse: _,\n    pageState: __,\n    setPageState: ___,\n    pages,\n    canAdvance,\n    canFinish,\n    currentPage,\n    setPageIndex,\n    disabled,\n    onClick,\n    onNext,\n    onFinish,\n    finishLabel,\n    children,\n    ...props,\n  }) => {\n    const isLast = finishLabel && currentPage + 1 >= pages.length\n\n    return (\n      <Button\n        disabled={disabled || (isLast ? !canFinish : !canAdvance)}\n        {...props}\n        onClick={e => {\n          let returnValue\n          if (currentPage + 1 >= pages.length) {\n            if (onFinish) {\n              returnValue = onFinish()\n            }\n          } else {\n            if (onNext) {\n              returnValue = onNext()\n            }\n            setPageIndex(currentPage + 1)\n          }\n          return onClick ? onClick(e) : returnValue\n        }}\n      >\n        {finishLabel && currentPage + 1 >= pages.length ? (\n          finishLabel\n        ) : (\n          children\n        )}\n      </Button>\n    )\n  },\n)\n\nexport type ReverseButtonProps = {\n  /**\n   * The component to render, it defaults to a browser <button> element.\n   */\n  component?: ReactType\n  /**\n   * Callback when the button is used to cancel the stepper\n   */\n  onCancel?: () => void\n  /**\n   * Callback when the button is used to go to the previous page\n   */\n  onPrevious?: () => void\n  /**\n   * A label to show instead of the children when the stepper\n   * is on the first page.\n   */\n  cancelLabel?: ReactChild\n}\n\n/**\n * Renders a button to go to the previous step\n *\n * ### Usage\n * ```\n * <ReverseButton>\n *   Back\n * </ReverseButton>\n * ```\n */\nexport const ReverseButton: StatelessComponent<\n  ReverseButtonProps & DOMAttributes<HTMLButtonElement>\n> = compose(\n  withStepper,\n  setDisplayName('ReverseButton'),\n)(\n  ({\n    component: Button = 'button',\n    canAdvance: _,\n    pages: __,\n    pageState: ___,\n    setPageState: ____,\n    canFinish: _____,\n    canReverse,\n    currentPage,\n    setPageIndex,\n    disabled,\n    onClick,\n    onPrevious,\n    onCancel,\n    cancelLabel,\n    children,\n    ...props,\n  }) => (\n    <Button\n      disabled={disabled || (!cancelLabel && !canReverse)}\n      {...props}\n      onClick={e => {\n        let returnValue\n        if (currentPage <= 0) {\n          if (onCancel) {\n            returnValue = onCancel()\n          }\n        } else {\n          if (onPrevious) {\n            returnValue = onPrevious()\n          }\n          setPageIndex(currentPage - 1)\n        }\n        return onClick ? onClick(e) : returnValue\n      }}\n    >\n      {cancelLabel && currentPage <= 0 ? cancelLabel : children}\n    </Button>\n  ),\n)\n"]}