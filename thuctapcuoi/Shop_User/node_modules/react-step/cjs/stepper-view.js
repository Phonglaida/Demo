"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StepperView = undefined;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _entities = require("./entities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * Renders the active page in the stepper
 */
var StepperView = exports.StepperView = function (_Component) {
    _inherits(StepperView, _Component);

    function StepperView() {
        _classCallCheck(this, StepperView);

        return _possibleConstructorReturn(this, (StepperView.__proto__ || Object.getPrototypeOf(StepperView)).apply(this, arguments));
    }

    _createClass(StepperView, [{
        key: 'render',
        value: function render() {
            var _context = this.context,
                pages = _context.pages,
                currentPage = _context.currentPage;

            var page = pages[currentPage];
            if (page.render) {
                return page.render();
            } else {
                return _react2.default.createElement(page.component, null);
            }
        }
    }]);

    return StepperView;
}(_react.Component);
StepperView.contextTypes = _entities.stepperContext;
//# sourceMappingURL=stepper-view.js.map
//# sourceMappingURL=stepper-view.js.map
