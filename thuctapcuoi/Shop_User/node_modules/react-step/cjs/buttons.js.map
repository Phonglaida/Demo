{"version":3,"sources":["../src/buttons.tsx",".","buttons.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","AdvanceButton","compose","setDisplayName","_a","_a$component","component","Button","undefined","_","canReverse","__","pageState","___","setPageState","pages","canAdvance","canFinish","currentPage","setPageIndex","disabled","onClick","onNext","onFinish","finishLabel","children","props","isLast","React","createElement","assign","returnValue","ReverseButton","_a$component2","____","_____","onPrevious","onCancel","cancelLabel"],"mappings":"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","file":"buttons.js","sourcesContent":["import React, {\n  DOMAttributes,\n  ReactChild,\n  ReactType,\n  StatelessComponent,\n} from 'react'\nimport {compose, setDisplayName} from 'recompose'\nimport {withStepper} from './with-stepper'\n\nexport type AdvanceButtonProps = {\n  /**\n   * The component to render, it defaults to a browser <button> element.\n   */\n  component?: ReactType\n  /**\n   * Callback when the button is used to finish the stepper\n   */\n  onFinish?: () => void\n  /**\n   * Callback when the button is used to go to the next page\n   */\n  onNext?: () => void\n  /**\n   * A label to show instead of the children when the stepper\n   * is on the last page.\n   */\n  finishLabel?: ReactChild\n}\n\n/**\n * Renders a button to go to the next step\n *\n * ### Usage\n * ```\n * <AdvanceButton>\n *   Next\n * </AdvanceButton>\n * ```\n */\nexport const AdvanceButton: StatelessComponent<\n  AdvanceButtonProps & DOMAttributes<HTMLButtonElement>\n> = compose(\n  withStepper,\n  setDisplayName('AdvanceButton'),\n)(\n  ({\n    component: Button = 'button',\n    canReverse: _,\n    pageState: __,\n    setPageState: ___,\n    pages,\n    canAdvance,\n    canFinish,\n    currentPage,\n    setPageIndex,\n    disabled,\n    onClick,\n    onNext,\n    onFinish,\n    finishLabel,\n    children,\n    ...props,\n  }) => {\n    const isLast = finishLabel && currentPage + 1 >= pages.length\n\n    return (\n      <Button\n        disabled={disabled || (isLast ? !canFinish : !canAdvance)}\n        {...props}\n        onClick={e => {\n          let returnValue\n          if (currentPage + 1 >= pages.length) {\n            if (onFinish) {\n              returnValue = onFinish()\n            }\n          } else {\n            if (onNext) {\n              returnValue = onNext()\n            }\n            setPageIndex(currentPage + 1)\n          }\n          return onClick ? onClick(e) : returnValue\n        }}\n      >\n        {finishLabel && currentPage + 1 >= pages.length ? (\n          finishLabel\n        ) : (\n          children\n        )}\n      </Button>\n    )\n  },\n)\n\nexport type ReverseButtonProps = {\n  /**\n   * The component to render, it defaults to a browser <button> element.\n   */\n  component?: ReactType\n  /**\n   * Callback when the button is used to cancel the stepper\n   */\n  onCancel?: () => void\n  /**\n   * Callback when the button is used to go to the previous page\n   */\n  onPrevious?: () => void\n  /**\n   * A label to show instead of the children when the stepper\n   * is on the first page.\n   */\n  cancelLabel?: ReactChild\n}\n\n/**\n * Renders a button to go to the previous step\n *\n * ### Usage\n * ```\n * <ReverseButton>\n *   Back\n * </ReverseButton>\n * ```\n */\nexport const ReverseButton: StatelessComponent<\n  ReverseButtonProps & DOMAttributes<HTMLButtonElement>\n> = compose(\n  withStepper,\n  setDisplayName('ReverseButton'),\n)(\n  ({\n    component: Button = 'button',\n    canAdvance: _,\n    pages: __,\n    pageState: ___,\n    setPageState: ____,\n    canFinish: _____,\n    canReverse,\n    currentPage,\n    setPageIndex,\n    disabled,\n    onClick,\n    onPrevious,\n    onCancel,\n    cancelLabel,\n    children,\n    ...props,\n  }) => (\n    <Button\n      disabled={disabled || (!cancelLabel && !canReverse)}\n      {...props}\n      onClick={e => {\n        let returnValue\n        if (currentPage <= 0) {\n          if (onCancel) {\n            returnValue = onCancel()\n          }\n        } else {\n          if (onPrevious) {\n            returnValue = onPrevious()\n          }\n          setPageIndex(currentPage - 1)\n        }\n        return onClick ? onClick(e) : returnValue\n      }}\n    >\n      {cancelLabel && currentPage <= 0 ? cancelLabel : children}\n    </Button>\n  ),\n)\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport { compose, setDisplayName } from 'recompose';\nimport { withStepper } from './with-stepper';\n/**\n * Renders a button to go to the next step\n *\n * ### Usage\n * ```\n * <AdvanceButton>\n *   Next\n * </AdvanceButton>\n * ```\n */\nexport const AdvanceButton = compose(withStepper, setDisplayName('AdvanceButton'))((_a) => {\n    var { component: Button = 'button', canReverse: _, pageState: __, setPageState: ___, pages, canAdvance, canFinish, currentPage, setPageIndex, disabled, onClick, onNext, onFinish, finishLabel, children } = _a, props = __rest(_a, [\"component\", \"canReverse\", \"pageState\", \"setPageState\", \"pages\", \"canAdvance\", \"canFinish\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onNext\", \"onFinish\", \"finishLabel\", \"children\"]);\n    const isLast = finishLabel && currentPage + 1 >= pages.length;\n    return (React.createElement(Button, Object.assign({ disabled: disabled || (isLast ? !canFinish : !canAdvance) }, props, { onClick: e => {\n            let returnValue;\n            if (currentPage + 1 >= pages.length) {\n                if (onFinish) {\n                    returnValue = onFinish();\n                }\n            }\n            else {\n                if (onNext) {\n                    returnValue = onNext();\n                }\n                setPageIndex(currentPage + 1);\n            }\n            return onClick ? onClick(e) : returnValue;\n        } }), finishLabel && currentPage + 1 >= pages.length ? (finishLabel) : (children)));\n});\n/**\n * Renders a button to go to the previous step\n *\n * ### Usage\n * ```\n * <ReverseButton>\n *   Back\n * </ReverseButton>\n * ```\n */\nexport const ReverseButton = compose(withStepper, setDisplayName('ReverseButton'))((_a) => {\n    var { component: Button = 'button', canAdvance: _, pages: __, pageState: ___, setPageState: ____, canFinish: _____, canReverse, currentPage, setPageIndex, disabled, onClick, onPrevious, onCancel, cancelLabel, children } = _a, props = __rest(_a, [\"component\", \"canAdvance\", \"pages\", \"pageState\", \"setPageState\", \"canFinish\", \"canReverse\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onPrevious\", \"onCancel\", \"cancelLabel\", \"children\"]);\n    return (React.createElement(Button, Object.assign({ disabled: disabled || (!cancelLabel && !canReverse) }, props, { onClick: e => {\n            let returnValue;\n            if (currentPage <= 0) {\n                if (onCancel) {\n                    returnValue = onCancel();\n                }\n            }\n            else {\n                if (onPrevious) {\n                    returnValue = onPrevious();\n                }\n                setPageIndex(currentPage - 1);\n            }\n            return onClick ? onClick(e) : returnValue;\n        } }), cancelLabel && currentPage <= 0 ? cancelLabel : children));\n});\n","var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport React from 'react';\nimport { compose, setDisplayName } from 'recompose';\nimport { withStepper } from './with-stepper';\n/**\n * Renders a button to go to the next step\n *\n * ### Usage\n * ```\n * <AdvanceButton>\n *   Next\n * </AdvanceButton>\n * ```\n */\nexport var AdvanceButton = compose(withStepper, setDisplayName('AdvanceButton'))(function (_a) {\n    var _a$component = _a.component,\n        Button = _a$component === undefined ? 'button' : _a$component,\n        _ = _a.canReverse,\n        __ = _a.pageState,\n        ___ = _a.setPageState,\n        pages = _a.pages,\n        canAdvance = _a.canAdvance,\n        canFinish = _a.canFinish,\n        currentPage = _a.currentPage,\n        setPageIndex = _a.setPageIndex,\n        disabled = _a.disabled,\n        _onClick = _a.onClick,\n        onNext = _a.onNext,\n        onFinish = _a.onFinish,\n        finishLabel = _a.finishLabel,\n        children = _a.children,\n        props = __rest(_a, [\"component\", \"canReverse\", \"pageState\", \"setPageState\", \"pages\", \"canAdvance\", \"canFinish\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onNext\", \"onFinish\", \"finishLabel\", \"children\"]);\n\n    var isLast = finishLabel && currentPage + 1 >= pages.length;\n    return React.createElement(Button, Object.assign({ disabled: disabled || (isLast ? !canFinish : !canAdvance) }, props, { onClick: function onClick(e) {\n            var returnValue = void 0;\n            if (currentPage + 1 >= pages.length) {\n                if (onFinish) {\n                    returnValue = onFinish();\n                }\n            } else {\n                if (onNext) {\n                    returnValue = onNext();\n                }\n                setPageIndex(currentPage + 1);\n            }\n            return _onClick ? _onClick(e) : returnValue;\n        } }), finishLabel && currentPage + 1 >= pages.length ? finishLabel : children);\n});\n/**\n * Renders a button to go to the previous step\n *\n * ### Usage\n * ```\n * <ReverseButton>\n *   Back\n * </ReverseButton>\n * ```\n */\nexport var ReverseButton = compose(withStepper, setDisplayName('ReverseButton'))(function (_a) {\n    var _a$component2 = _a.component,\n        Button = _a$component2 === undefined ? 'button' : _a$component2,\n        _ = _a.canAdvance,\n        __ = _a.pages,\n        ___ = _a.pageState,\n        ____ = _a.setPageState,\n        _____ = _a.canFinish,\n        canReverse = _a.canReverse,\n        currentPage = _a.currentPage,\n        setPageIndex = _a.setPageIndex,\n        disabled = _a.disabled,\n        _onClick2 = _a.onClick,\n        onPrevious = _a.onPrevious,\n        onCancel = _a.onCancel,\n        cancelLabel = _a.cancelLabel,\n        children = _a.children,\n        props = __rest(_a, [\"component\", \"canAdvance\", \"pages\", \"pageState\", \"setPageState\", \"canFinish\", \"canReverse\", \"currentPage\", \"setPageIndex\", \"disabled\", \"onClick\", \"onPrevious\", \"onCancel\", \"cancelLabel\", \"children\"]);\n\n    return React.createElement(Button, Object.assign({ disabled: disabled || !cancelLabel && !canReverse }, props, { onClick: function onClick(e) {\n            var returnValue = void 0;\n            if (currentPage <= 0) {\n                if (onCancel) {\n                    returnValue = onCancel();\n                }\n            } else {\n                if (onPrevious) {\n                    returnValue = onPrevious();\n                }\n                setPageIndex(currentPage - 1);\n            }\n            return _onClick2 ? _onClick2(e) : returnValue;\n        } }), cancelLabel && currentPage <= 0 ? cancelLabel : children);\n});\n//# sourceMappingURL=buttons.js.map\n"]}