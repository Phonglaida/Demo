{"version":3,"sources":["../src/text-tracker.tsx","text-tracker.js"],"names":["defaultGenerateText","current","total","TextTracker","compose","setDisplayName","_ref","pages","currentPage","_ref$generateText","generateText","undefined","style","React","createElement","length"],"mappings":";;;;;;;AACA;;;;AACA;;AACA;;;;AAIA,IAAMA,sBAAsB,SAAtBA,mBAAsB,CAACC,OAAD,EAAUC,KAAV,EAAA;AAAA,SAAA,WAClBD,UAAU,CADQ,IAAA,MAAA,GACAC,KADA;AAA5B,CAAA;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBO,IAAMC,oCAGRC,kDAEHC,+BAAe,aAAfA,CAFGD,EAGH,UAAAE,IAAA,EAAA;AAAA,MAAEC,QAAFD,KAAEC,KAAF;AAAA,MAASC,cAATF,KAASE,WAAT;AAAA,MAAAC,oBAAAH,KAAsBI,YAAtB;AAAA,MAAsBA,eAAtBD,sBAAAE,SAAA,GAAqCX,mBAArC,GAAAS,iBAAA;AAAA,MAA0DG,QAA1DN,KAA0DM,KAA1D;AAAA,SACAC,gBAAAC,aAAAD,CAAA,MAAAA,EAAA,EAAMD,OAAOA,KAAb,EAAAC,EAAqBH,aAAaF,WAAbE,EAA0BH,MAAMQ,MAAhCL,CAArBG,CADA;AAHG,CAAAT,CAHE;ACIP","file":"text-tracker.js","sourcesContent":["import {Requireable} from 'prop-types'\nimport React, {CSSProperties, StatelessComponent} from 'react'\nimport {compose, setDisplayName} from 'recompose'\nimport {withStepper} from './with-stepper'\n\nexport {Requireable}\n\nconst defaultGenerateText = (current, total) =>\n  `Step ${current + 1} of ${total}`\n\n/**\n * A component for tracking the current and total pages\n * using a text.\n *\n * ### Usage\n * ```\n * <TextTracker />\n * ```\n *\n * ### Options\n * The default behavior is to render a tect in the format `Step 1 of 2`.\n * To render in a different format, pass a function in the generateText property\n * that takes the current and total number of pages as arguments and returns\n * the text to be rendered.\n *\n * For example\n * ```\n * (current, total) => `${current + 1} / ${total}`\n * ```\n * will render `1 / 2`. Note that the current page is zero based.\n */\nexport const TextTracker: StatelessComponent<{\n  generateText?: (current: number, total: number) => string\n  style?: CSSProperties\n}> = compose(\n  withStepper,\n  setDisplayName('TextTracker'),\n)(({pages, currentPage, generateText = defaultGenerateText, style}) => (\n  <span style={style}>{generateText(currentPage, pages.length)}</span>\n))\n","import React from 'react';\nimport { compose, setDisplayName } from 'recompose';\nimport { withStepper } from './with-stepper';\nvar defaultGenerateText = function defaultGenerateText(current, total) {\n  return 'Step ' + (current + 1) + ' of ' + total;\n};\n/**\n * A component for tracking the current and total pages\n * using a text.\n *\n * ### Usage\n * ```\n * <TextTracker />\n * ```\n *\n * ### Options\n * The default behavior is to render a tect in the format `Step 1 of 2`.\n * To render in a different format, pass a function in the generateText property\n * that takes the current and total number of pages as arguments and returns\n * the text to be rendered.\n *\n * For example\n * ```\n * (current, total) => `${current + 1} / ${total}`\n * ```\n * will render `1 / 2`. Note that the current page is zero based.\n */\nexport var TextTracker = compose(withStepper, setDisplayName('TextTracker'))(function (_ref) {\n  var pages = _ref.pages,\n      currentPage = _ref.currentPage,\n      _ref$generateText = _ref.generateText,\n      generateText = _ref$generateText === undefined ? defaultGenerateText : _ref$generateText,\n      style = _ref.style;\n  return React.createElement(\"span\", { style: style }, generateText(currentPage, pages.length));\n});\n//# sourceMappingURL=text-tracker.js.map\n"]}