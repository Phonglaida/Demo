{"version":3,"sources":["stepper.js","../src/stepper.tsx","."],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Stepper","_Component","_this","getPrototypeOf","allowNavigate","fn","toIndex","mark","_callee","navigate","wrap","_callee$","_context","prev","sent","abrupt","stop","setPageIndex","index","_callee2","_props","pages","allowJumpAhead","_props$allowJumpBack","allowJumpBack","currentPage","page","nextPage","_callee2$","_context2","undefined","pageIndex","RangeError","t0","canAdvance","onAdvance","t1","canReverse","onReverse","onLeave","onEnter","_setIndex","state","getChildContext","canFinish","componentWillReceiveProps","nextProps","onChange","render","children","Children","count","React","createElement","setState","get","childContextTypes"],"mappings":"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","file":"stepper.js","sourcesContent":["import _regeneratorRuntime from 'babel-runtime/regenerator';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { Children, Component } from 'react';\nimport { stepperContext } from './entities';\n/**\n * The component where a stepper is configured and holds all state\n * and logic for navigating a stepper.\n *\n * It does not render any UI by itself and must be accompanied by\n * UI components like the DotTracker, Advance and Reverse Buttons or others.\n *\n * ### Usage\n * ```\n * <Stepper pages={[{component: PageOne}, {component: PageTwo}]}>\n *  <StepperView />\n *  <Row>\n *    <ReverseButton>Back</ReverseButton>\n *    <DotTracker />\n *    <AdvanceButton>Next</AdvanceButton>\n *  </Row>\n * </Stepper>\n * ```\n */\nexport var Stepper = function (_Component) {\n    _inherits(Stepper, _Component);\n\n    function Stepper(props) {\n        _classCallCheck(this, Stepper);\n\n        var _this = _possibleConstructorReturn(this, (Stepper.__proto__ || Object.getPrototypeOf(Stepper)).call(this, props));\n\n        _this.allowNavigate = function (fn, toIndex) {\n            return __awaiter(_this, void 0, void 0, _regeneratorRuntime.mark(function _callee() {\n                var navigate;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!fn) {\n                                    _context.next = 7;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return fn(toIndex);\n\n                            case 3:\n                                navigate = _context.sent;\n                                return _context.abrupt('return', navigate !== false);\n\n                            case 7:\n                                return _context.abrupt('return', true);\n\n                            case 8:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n        };\n        _this.setPageIndex = function (index) {\n            return __awaiter(_this, void 0, void 0, _regeneratorRuntime.mark(function _callee2() {\n                var _props, pages, allowJumpAhead, _props$allowJumpBack, allowJumpBack, currentPage, page, nextPage;\n\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _props = this.props, pages = _props.pages, allowJumpAhead = _props.allowJumpAhead, _props$allowJumpBack = _props.allowJumpBack, allowJumpBack = _props$allowJumpBack === undefined ? true : _props$allowJumpBack;\n                                currentPage = this.pageIndex;\n\n                                if (!(index >= pages.length)) {\n                                    _context2.next = 4;\n                                    break;\n                                }\n\n                                throw RangeError('index ' + index + ' is higher than avalible pages ' + pages.length);\n\n                            case 4:\n                                if (!(index < 0)) {\n                                    _context2.next = 6;\n                                    break;\n                                }\n\n                                throw RangeError('index ' + index + ' is lower than zero');\n\n                            case 6:\n                                page = pages[currentPage];\n\n                                if (!(index > currentPage)) {\n                                    _context2.next = 19;\n                                    break;\n                                }\n\n                                if (!(index > currentPage + 1 && !allowJumpAhead)) {\n                                    _context2.next = 10;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', false);\n\n                            case 10:\n                                _context2.t0 = !this.canAdvance;\n\n                                if (_context2.t0) {\n                                    _context2.next = 15;\n                                    break;\n                                }\n\n                                _context2.next = 14;\n                                return this.allowNavigate(page.onAdvance, index);\n\n                            case 14:\n                                _context2.t0 = !_context2.sent;\n\n                            case 15:\n                                if (!_context2.t0) {\n                                    _context2.next = 17;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', false);\n\n                            case 17:\n                                _context2.next = 28;\n                                break;\n\n                            case 19:\n                                if (!(index < currentPage - 1 && !allowJumpBack)) {\n                                    _context2.next = 21;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', false);\n\n                            case 21:\n                                _context2.t1 = !this.canReverse;\n\n                                if (_context2.t1) {\n                                    _context2.next = 26;\n                                    break;\n                                }\n\n                                _context2.next = 25;\n                                return this.allowNavigate(page.onReverse, index);\n\n                            case 25:\n                                _context2.t1 = !_context2.sent;\n\n                            case 26:\n                                if (!_context2.t1) {\n                                    _context2.next = 28;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', false);\n\n                            case 28:\n                                _context2.next = 30;\n                                return this.allowNavigate(page.onLeave, index);\n\n                            case 30:\n                                if (_context2.sent) {\n                                    _context2.next = 32;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', false);\n\n                            case 32:\n                                nextPage = pages[index];\n                                _context2.next = 35;\n                                return this.allowNavigate(nextPage.onEnter, currentPage);\n\n                            case 35:\n                                this._setIndex(index);\n\n                            case 36:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n        };\n        _this.state = { currentPage: props.index || 0 };\n        return _this;\n    }\n\n    _createClass(Stepper, [{\n        key: 'getChildContext',\n        value: function getChildContext() {\n            return {\n                pages: this.props.pages,\n                currentPage: this.pageIndex,\n                canAdvance: this.canAdvance,\n                canFinish: this.canFinish,\n                canReverse: this.canReverse,\n                setPageIndex: this.setPageIndex\n            };\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.pages.length <= this.pageIndex) {\n                this._setIndex(0);\n            }\n            if (nextProps.index !== this.props.index && !nextProps.onChange && typeof nextProps.index === 'number') {\n                this._setIndex(nextProps.index);\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var children = this.props.children;\n\n            return Children.count(children) < 2 ? children : React.createElement(\"div\", null, children);\n        }\n    }, {\n        key: '_setIndex',\n        value: function _setIndex(index) {\n            if (this.props.onChange) {\n                this.props.onChange(index);\n            } else {\n                this.setState({ currentPage: index });\n            }\n        }\n    }, {\n        key: 'pageIndex',\n        get: function get() {\n            if (this.props.onChange) return this.props.index;else return this.state.currentPage;\n        }\n    }, {\n        key: 'canAdvance',\n        get: function get() {\n            var pages = this.props.pages;\n\n            var currentPage = this.pageIndex;\n            if (currentPage + 1 >= pages.length) return false;\n            var page = pages[currentPage];\n            return !page.canAdvance || page.canAdvance();\n        }\n    }, {\n        key: 'canFinish',\n        get: function get() {\n            var pages = this.props.pages;\n\n            var currentPage = this.pageIndex;\n            if (currentPage + 1 < pages.length) return false;\n            var page = pages[currentPage];\n            return !page.canAdvance || page.canAdvance();\n        }\n    }, {\n        key: 'canReverse',\n        get: function get() {\n            var currentPage = this.pageIndex;\n            if (currentPage <= 0) return false;\n            var page = this.props.pages[currentPage];\n            return !page.canReverse || page.canReverse();\n        }\n    }]);\n\n    return Stepper;\n}(Component);\nStepper.childContextTypes = stepperContext;\n//# sourceMappingURL=stepper.js.map\n","import {Requireable} from 'prop-types'\nimport React, {Children, Component, ReactElement} from 'react'\nimport {PageConfig, stepperContext} from './entities'\n\nexport {Requireable}\n\nexport type Props = {\n  /**\n   * The page index to set as active page\n   */\n  index?: number\n  /**\n   * Called when the page changes. If this is passed, the Stepper\n   * becomes controlled and will expect the parent to maintain the state and update\n   * the index property appropriately.\n   */\n  onChange?: (index: number) => void\n  pages: Array<PageConfig>\n  /**\n   * Allow reversing more than one step at a time\n   * @default true\n   */\n  allowJumpBack?: boolean\n  /**\n   * Allow advancing more than one step at a time\n   * @default false\n   */\n  allowJumpAhead?: boolean\n}\n\nexport type State = {\n  currentPage?: number\n}\n\n/**\n * The component where a stepper is configured and holds all state\n * and logic for navigating a stepper.\n *\n * It does not render any UI by itself and must be accompanied by\n * UI components like the DotTracker, Advance and Reverse Buttons or others.\n *\n * ### Usage\n * ```\n * <Stepper pages={[{component: PageOne}, {component: PageTwo}]}>\n *  <StepperView />\n *  <Row>\n *    <ReverseButton>Back</ReverseButton>\n *    <DotTracker />\n *    <AdvanceButton>Next</AdvanceButton>\n *  </Row>\n * </Stepper>\n * ```\n */\nexport class Stepper extends Component<Props, State> {\n  static childContextTypes = stepperContext\n\n  get pageIndex() {\n    if (this.props.onChange) return this.props.index\n    else return this.state.currentPage\n  }\n\n  get canAdvance() {\n    const {pages} = this.props\n    const currentPage = this.pageIndex\n    if (currentPage + 1 >= pages.length) return false\n    const page = pages[currentPage]\n    return !page.canAdvance || page.canAdvance()\n  }\n\n  get canFinish() {\n    const {pages} = this.props\n    const currentPage = this.pageIndex\n    if (currentPage + 1 < pages.length) return false\n    const page = pages[currentPage]\n    return !page.canAdvance || page.canAdvance()\n  }\n\n  get canReverse() {\n    const currentPage = this.pageIndex\n    if (currentPage <= 0) return false\n    const page = this.props.pages[currentPage]\n    return !page.canReverse || page.canReverse()\n  }\n\n  allowNavigate = async (fn, toIndex: number) => {\n    if (fn) {\n      const navigate = await fn(toIndex)\n      return navigate !== false\n    } else return true\n  }\n  setPageIndex = async (index: number) => {\n    const {pages, allowJumpAhead, allowJumpBack = true} = this.props\n    const currentPage = this.pageIndex\n\n    if (index >= pages.length)\n      throw RangeError(\n        `index ${index} is higher than avalible pages ${pages.length}`,\n      )\n    if (index < 0) throw RangeError(`index ${index} is lower than zero`)\n\n    const page = pages[currentPage]\n\n    if (index > currentPage) {\n      if (index > currentPage + 1 && !allowJumpAhead) return false\n      if (!this.canAdvance || !await this.allowNavigate(page.onAdvance, index))\n        return false\n    } else {\n      if (index < currentPage - 1 && !allowJumpBack) return false\n      if (!this.canReverse || !await this.allowNavigate(page.onReverse, index))\n        return false\n    }\n    if (!await this.allowNavigate(page.onLeave, index)) return false\n\n    const nextPage = pages[index]\n    await this.allowNavigate(nextPage.onEnter, currentPage)\n\n    this._setIndex(index)\n  }\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {currentPage: props.index || 0}\n  }\n\n  getChildContext() {\n    return {\n      pages: this.props.pages,\n      currentPage: this.pageIndex,\n      canAdvance: this.canAdvance,\n      canFinish: this.canFinish,\n      canReverse: this.canReverse,\n      setPageIndex: this.setPageIndex,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.pages.length <= this.pageIndex) {\n      this._setIndex(0)\n    }\n    if (\n      nextProps.index !== this.props.index &&\n      !nextProps.onChange &&\n      typeof nextProps.index === 'number'\n    ) {\n      this._setIndex(nextProps.index)\n    }\n  }\n\n  render() {\n    const {children} = this.props\n\n    return Children.count(children) < 2 ? (\n      children as ReactElement<any>\n    ) : (\n      <div>{children}</div>\n    )\n  }\n\n  private _setIndex(index: number) {\n    if (this.props.onChange) {\n      this.props.onChange(index)\n    } else {\n      this.setState({currentPage: index})\n    }\n  }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { Children, Component } from 'react';\nimport { stepperContext } from './entities';\n/**\n * The component where a stepper is configured and holds all state\n * and logic for navigating a stepper.\n *\n * It does not render any UI by itself and must be accompanied by\n * UI components like the DotTracker, Advance and Reverse Buttons or others.\n *\n * ### Usage\n * ```\n * <Stepper pages={[{component: PageOne}, {component: PageTwo}]}>\n *  <StepperView />\n *  <Row>\n *    <ReverseButton>Back</ReverseButton>\n *    <DotTracker />\n *    <AdvanceButton>Next</AdvanceButton>\n *  </Row>\n * </Stepper>\n * ```\n */\nexport class Stepper extends Component {\n    constructor(props) {\n        super(props);\n        this.allowNavigate = (fn, toIndex) => __awaiter(this, void 0, void 0, function* () {\n            if (fn) {\n                const navigate = yield fn(toIndex);\n                return navigate !== false;\n            }\n            else\n                return true;\n        });\n        this.setPageIndex = (index) => __awaiter(this, void 0, void 0, function* () {\n            const { pages, allowJumpAhead, allowJumpBack = true } = this.props;\n            const currentPage = this.pageIndex;\n            if (index >= pages.length)\n                throw RangeError(`index ${index} is higher than avalible pages ${pages.length}`);\n            if (index < 0)\n                throw RangeError(`index ${index} is lower than zero`);\n            const page = pages[currentPage];\n            if (index > currentPage) {\n                if (index > currentPage + 1 && !allowJumpAhead)\n                    return false;\n                if (!this.canAdvance || !(yield this.allowNavigate(page.onAdvance, index)))\n                    return false;\n            }\n            else {\n                if (index < currentPage - 1 && !allowJumpBack)\n                    return false;\n                if (!this.canReverse || !(yield this.allowNavigate(page.onReverse, index)))\n                    return false;\n            }\n            if (!(yield this.allowNavigate(page.onLeave, index)))\n                return false;\n            const nextPage = pages[index];\n            yield this.allowNavigate(nextPage.onEnter, currentPage);\n            this._setIndex(index);\n        });\n        this.state = { currentPage: props.index || 0 };\n    }\n    get pageIndex() {\n        if (this.props.onChange)\n            return this.props.index;\n        else\n            return this.state.currentPage;\n    }\n    get canAdvance() {\n        const { pages } = this.props;\n        const currentPage = this.pageIndex;\n        if (currentPage + 1 >= pages.length)\n            return false;\n        const page = pages[currentPage];\n        return !page.canAdvance || page.canAdvance();\n    }\n    get canFinish() {\n        const { pages } = this.props;\n        const currentPage = this.pageIndex;\n        if (currentPage + 1 < pages.length)\n            return false;\n        const page = pages[currentPage];\n        return !page.canAdvance || page.canAdvance();\n    }\n    get canReverse() {\n        const currentPage = this.pageIndex;\n        if (currentPage <= 0)\n            return false;\n        const page = this.props.pages[currentPage];\n        return !page.canReverse || page.canReverse();\n    }\n    getChildContext() {\n        return {\n            pages: this.props.pages,\n            currentPage: this.pageIndex,\n            canAdvance: this.canAdvance,\n            canFinish: this.canFinish,\n            canReverse: this.canReverse,\n            setPageIndex: this.setPageIndex,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.pages.length <= this.pageIndex) {\n            this._setIndex(0);\n        }\n        if (nextProps.index !== this.props.index &&\n            !nextProps.onChange &&\n            typeof nextProps.index === 'number') {\n            this._setIndex(nextProps.index);\n        }\n    }\n    render() {\n        const { children } = this.props;\n        return Children.count(children) < 2 ? children : (React.createElement(\"div\", null, children));\n    }\n    _setIndex(index) {\n        if (this.props.onChange) {\n            this.props.onChange(index);\n        }\n        else {\n            this.setState({ currentPage: index });\n        }\n    }\n}\nStepper.childContextTypes = stepperContext;\n"]}