{"version":3,"sources":["../src/utils.tsx",".","utils.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","defaultActiveColor","defaultAlertColor","defaultInactiveColor","Circle","_ref","size","color","margin","children","style","React","createElement","assign","width","height","backgroundColor","borderRadius","onKeyboardClick","fn","key","ClickableRow","_a","onClick","disabled","props","role","cursor","tabIndex","onKeyPress","VerticalLine","position","top","left","bottom","heigth"],"mappings":"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","file":"utils.js","sourcesContent":["import React, {CSSProperties, ReactChild} from 'react'\nimport {Row} from 'styled-material/cjs/layout'\n\nexport const defaultActiveColor = '#3f51b5'\nexport const defaultAlertColor = '#f44336'\nexport const defaultInactiveColor = '#bdbdbd'\n\nexport type CircleProps = {\n  color: string\n  size: number\n  margin?: number\n  children?: ReactChild\n  style?: CSSProperties\n}\n\n/**\n * A simple circle, used for step icons and by the dot tracker.\n */\nexport const Circle = ({size, color, margin, children, style}: CircleProps) => (\n  <div\n    children={children}\n    style={{\n      margin,\n      width: size,\n      height: size,\n      backgroundColor: color,\n      borderRadius: '50%',\n      ...style,\n    }}\n  />\n)\n\n/**\n * A function to filter keyboard events to spacebar and Enter\n */\nexport const onKeyboardClick = fn => (e: React.KeyboardEvent<any>) => {\n  if (e.key === ' ' || e.key === 'Enter') {\n    return fn(e)\n  }\n}\n\n/**\n * A flexbox row that is focusable and clickable like a button\n */\nexport const ClickableRow = ({onClick, disabled, style, ...props}) => (\n  <Row\n    role={!disabled && 'button'}\n    style={{\n      cursor: disabled ? 'default' : 'pointer',\n      ...style,\n    }}\n    tabIndex={disabled ? -1 : 0}\n    onClick={onClick}\n    onKeyPress={onKeyboardClick(onClick)}\n    {...props}\n  />\n)\n\n/**\n * A simple vertical line, used for constructing the vertical stepper\n */\nexport const VerticalLine = () => (\n  <div\n    style={{\n      position: 'absolute',\n      top: 0,\n      left: 36,\n      bottom: 16,\n      heigth: '100%',\n      width: 1,\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    }}\n  />\n)\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport { Row } from 'styled-material/cjs/layout';\nexport const defaultActiveColor = '#3f51b5';\nexport const defaultAlertColor = '#f44336';\nexport const defaultInactiveColor = '#bdbdbd';\n/**\n * A simple circle, used for step icons and by the dot tracker.\n */\nexport const Circle = ({ size, color, margin, children, style }) => (React.createElement(\"div\", { children: children, style: Object.assign({ margin, width: size, height: size, backgroundColor: color, borderRadius: '50%' }, style) }));\n/**\n * A function to filter keyboard events to spacebar and Enter\n */\nexport const onKeyboardClick = fn => (e) => {\n    if (e.key === ' ' || e.key === 'Enter') {\n        return fn(e);\n    }\n};\n/**\n * A flexbox row that is focusable and clickable like a button\n */\nexport const ClickableRow = (_a) => {\n    var { onClick, disabled, style } = _a, props = __rest(_a, [\"onClick\", \"disabled\", \"style\"]);\n    return (React.createElement(Row, Object.assign({ role: !disabled && 'button', style: Object.assign({ cursor: disabled ? 'default' : 'pointer' }, style), tabIndex: disabled ? -1 : 0, onClick: onClick, onKeyPress: onKeyboardClick(onClick) }, props)));\n};\n/**\n * A simple vertical line, used for constructing the vertical stepper\n */\nexport const VerticalLine = () => (React.createElement(\"div\", { style: {\n        position: 'absolute',\n        top: 0,\n        left: 36,\n        bottom: 16,\n        heigth: '100%',\n        width: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    } }));\n","var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport React from 'react';\nimport { Row } from 'styled-material/cjs/layout';\nexport var defaultActiveColor = '#3f51b5';\nexport var defaultAlertColor = '#f44336';\nexport var defaultInactiveColor = '#bdbdbd';\n/**\n * A simple circle, used for step icons and by the dot tracker.\n */\nexport var Circle = function Circle(_ref) {\n    var size = _ref.size,\n        color = _ref.color,\n        margin = _ref.margin,\n        children = _ref.children,\n        style = _ref.style;\n    return React.createElement(\"div\", { children: children, style: Object.assign({ margin: margin, width: size, height: size, backgroundColor: color, borderRadius: '50%' }, style) });\n};\n/**\n * A function to filter keyboard events to spacebar and Enter\n */\nexport var onKeyboardClick = function onKeyboardClick(fn) {\n    return function (e) {\n        if (e.key === ' ' || e.key === 'Enter') {\n            return fn(e);\n        }\n    };\n};\n/**\n * A flexbox row that is focusable and clickable like a button\n */\nexport var ClickableRow = function ClickableRow(_a) {\n    var onClick = _a.onClick,\n        disabled = _a.disabled,\n        style = _a.style,\n        props = __rest(_a, [\"onClick\", \"disabled\", \"style\"]);\n\n    return React.createElement(Row, Object.assign({ role: !disabled && 'button', style: Object.assign({ cursor: disabled ? 'default' : 'pointer' }, style), tabIndex: disabled ? -1 : 0, onClick: onClick, onKeyPress: onKeyboardClick(onClick) }, props));\n};\n/**\n * A simple vertical line, used for constructing the vertical stepper\n */\nexport var VerticalLine = function VerticalLine() {\n    return React.createElement(\"div\", { style: {\n            position: 'absolute',\n            top: 0,\n            left: 36,\n            bottom: 16,\n            heigth: '100%',\n            width: 1,\n            backgroundColor: 'rgba(0, 0, 0, 0.12)'\n        } });\n};\n//# sourceMappingURL=utils.js.map\n"]}