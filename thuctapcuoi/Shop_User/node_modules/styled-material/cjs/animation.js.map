{"version":3,"sources":["../../src/animation.ts","animation.js"],"names":["_templateObject","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","standardCurve","decelerationCurve","accelerationCurve","sharpCurve","animationDuration","mobile","large","enter","leave","fadeInKeyframes","keyframes","fadeIn"],"mappings":";;;;;;;AAAA;;ACAA,IAAIA,kBAAkBC,uBAAuB,CAAC,oEAAD,CAAvB,EAA+F,CAAC,oEAAD,CAA/F,CAAtB;;AAEA,SAASA,sBAAT,CAAgCC,OAAhC,EAAyCC,GAAzC,EAA8C;AAAE,SAAOC,OAAOC,MAAP,CAAcD,OAAOE,gBAAP,CAAwBJ,OAAxB,EAAiC,EAAEC,KAAK,EAAEI,OAAOH,OAAOC,MAAP,CAAcF,GAAd,CAAT,EAAP,EAAjC,CAAd,CAAP;AAAiG;;ADAjJ;;;;;;AAMO,IAAMK,wCAAAA,gCAAN;AACP;;;;;;;;AAQO,IAAMC,gDAAAA,gCAAN;AACP;;;;;;;;AAQO,IAAMC,gDAAAA,8BAAN;AACP;;;;;;;;;;;AAWO,IAAMC,kCAAAA,gCAAN;AAEA,IAAMC,gDAAoB;AAC/BC,UAAQ;AACNC,WAAAA,OADM;AAENC,WAAAA,OAFM;AAGNC,WAAAA;AAHM;AADuB,CAA1B;AAQA,IAAMC,4CAAkBC,iCAAlBlB,eAAkBkB,CAAxB;AAUA,IAAMC,0BAAYF,kBAAZ,GAAYA,GAAmBL,kBAAkBC,MAAlBD,CAAyBG,KAA5CE,GAAZ,GAAYA,GAAqDR,iBAAvE;ACPP","file":"animation.js","sourcesContent":["import {keyframes} from 'styled-components'\n\n/**\n * The standard curve (also referred to as “ease in out”) is the most common\n * easing curve. Elements quickly accelerate and slowly decelerate between\n * on-screen locations.\n * It applies to growing and shrinking material, among other property changes.\n */\nexport const standardCurve = `cubic-bezier(0.4, 0.0, 0.2, 1)`\n/**\n * Using the deceleration curve (also referred to as “ease out”) elements\n * enter the screen at full velocity and slowly decelerate to a resting point.\n *\n * During deceleration, elements may scale up either in size (to 100%) or\n * opacity (to 100%). In some cases, when elements enter the screen at 0% opacity,\n * they may slightly shrink from a larger size upon entry.\n */\nexport const decelerationCurve = `cubic-bezier(0.0, 0.0, 0.2, 1)`\n/**\n * Using the acceleration curve (also referred to as “ease in”) elements\n * leave the screen at full velocity. They do not decelerate when off-screen.\n *\n * They accelerate at the beginning of the animation and may scale down\n * in either size (to 0%) or opacity (to 0%). In some cases, when elements\n * leave the screen at 0% opacity, they may also slightly scale up or down in size.\n */\nexport const accelerationCurve = `cubic-bezier(0.4, 0.0, 1, 1)`\n/**\n * Using the sharp curve (also referred to as “ease in out”) elements quickly\n * accelerate and decelerate. It is used by exiting elements that may return\n * to the screen at any time.\n *\n * Elements may quickly accelerate from a starting point on-screen, then\n * quickly decelerate in a symmetrical curve to a resting point immediately\n * off-screen. The deceleration is faster than the standard curve since it\n * doesn't follow an exact path to the off-screen point.\n * Elements may return from that point at any time.\n */\nexport const sharpCurve = `cubic-bezier(0.4, 0.0, 0.6, 1)`\n\nexport const animationDuration = {\n  mobile: {\n    large: `375ms`,\n    enter: `225ms`,\n    leave: `195ms`,\n  },\n}\n\nexport const fadeInKeyframes = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`\n\nexport const fadeIn = `${fadeInKeyframes} ${animationDuration.mobile.enter} ${decelerationCurve}`\n","var _templateObject = _taggedTemplateLiteral(['\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n'], ['\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport { keyframes } from 'styled-components';\n/**\n * The standard curve (also referred to as “ease in out”) is the most common\n * easing curve. Elements quickly accelerate and slowly decelerate between\n * on-screen locations.\n * It applies to growing and shrinking material, among other property changes.\n */\nexport var standardCurve = 'cubic-bezier(0.4, 0.0, 0.2, 1)';\n/**\n * Using the deceleration curve (also referred to as “ease out”) elements\n * enter the screen at full velocity and slowly decelerate to a resting point.\n *\n * During deceleration, elements may scale up either in size (to 100%) or\n * opacity (to 100%). In some cases, when elements enter the screen at 0% opacity,\n * they may slightly shrink from a larger size upon entry.\n */\nexport var decelerationCurve = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\n/**\n * Using the acceleration curve (also referred to as “ease in”) elements\n * leave the screen at full velocity. They do not decelerate when off-screen.\n *\n * They accelerate at the beginning of the animation and may scale down\n * in either size (to 0%) or opacity (to 0%). In some cases, when elements\n * leave the screen at 0% opacity, they may also slightly scale up or down in size.\n */\nexport var accelerationCurve = 'cubic-bezier(0.4, 0.0, 1, 1)';\n/**\n * Using the sharp curve (also referred to as “ease in out”) elements quickly\n * accelerate and decelerate. It is used by exiting elements that may return\n * to the screen at any time.\n *\n * Elements may quickly accelerate from a starting point on-screen, then\n * quickly decelerate in a symmetrical curve to a resting point immediately\n * off-screen. The deceleration is faster than the standard curve since it\n * doesn't follow an exact path to the off-screen point.\n * Elements may return from that point at any time.\n */\nexport var sharpCurve = 'cubic-bezier(0.4, 0.0, 0.6, 1)';\nexport var animationDuration = {\n  mobile: {\n    large: '375ms',\n    enter: '225ms',\n    leave: '195ms'\n  }\n};\nexport var fadeInKeyframes = keyframes(_templateObject);\nexport var fadeIn = fadeInKeyframes + ' ' + animationDuration.mobile.enter + ' ' + decelerationCurve;\n//# sourceMappingURL=animation.js.map\n"]}