{"ast":null,"code":"import { login } from \"../../ServerRequest\";\nexport const userLogin = (username, password) => dispatch => {\n  dispatch({\n    type: LOGIN_BEGIN\n  });\n  return login(username, password).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res\n    });\n    return res;\n  }).catch(error => {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        error\n      }\n    });\n    throw error;\n  });\n};\nexport const insertToken = () => dispatch => {\n  let token;\n  if (localStorage.getItem(\"current_user\")) {\n    token = JSON.parse(localStorage.getItem(\"current_user\"));\n    dispatch({\n      type: INSERT_TOKEN_SUCCESS,\n      payload: token\n    });\n  } else {\n    dispatch({\n      type: INSERT_TOKEN_FAIL\n    });\n  }\n};\nexport const LOGIN_BEGIN = \"LOGIN_BEGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const INSERT_TOKEN_SUCCESS = \"INSERT_TOKEN_SUCCESS\";\nexport const INSERT_TOKEN_FAIL = \"INSERT_TOKEN_FAIL\";","map":{"version":3,"names":["login","userLogin","username","password","dispatch","type","LOGIN_BEGIN","then","res","LOGIN_SUCCESS","payload","catch","error","LOGIN_FAIL","insertToken","token","localStorage","getItem","JSON","parse","INSERT_TOKEN_SUCCESS","INSERT_TOKEN_FAIL"],"sources":["E:/lam ho/thuctapcuoi/Shop_User/src/redux/actions/LoginAction.js"],"sourcesContent":["import { login } from \"../../ServerRequest\";\r\n\r\nexport const userLogin = (username, password) => dispatch => {\r\n  dispatch({\r\n    type: LOGIN_BEGIN\r\n  });\r\n  return login(username, password)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res\r\n      });\r\n\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: { error }\r\n      });\r\n\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const insertToken = () => dispatch => {\r\n  let token;\r\n  if (localStorage.getItem(\"current_user\")) {\r\n    token = JSON.parse(localStorage.getItem(\"current_user\"));\r\n    dispatch({\r\n      type: INSERT_TOKEN_SUCCESS,\r\n      payload: token\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: INSERT_TOKEN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const LOGIN_BEGIN = \"LOGIN_BEGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const INSERT_TOKEN_SUCCESS = \"INSERT_TOKEN_SUCCESS\";\r\nexport const INSERT_TOKEN_FAIL = \"INSERT_TOKEN_FAIL\";\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,qBAAqB;AAE3C,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAKC,QAAQ,IAAI;EAC3DA,QAAQ,CAAC;IACPC,IAAI,EAAEC;EACR,CAAC,CAAC;EACF,OAAON,KAAK,CAACE,QAAQ,EAAEC,QAAQ,CAAC,CAC7BI,IAAI,CAACC,GAAG,IAAI;IACXJ,QAAQ,CAAC;MACPC,IAAI,EAAEI,aAAa;MACnBC,OAAO,EAAEF;IACX,CAAC,CAAC;IAEF,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAEQ,UAAU;MAChBH,OAAO,EAAE;QAAEE;MAAM;IACnB,CAAC,CAAC;IAEF,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMV,QAAQ,IAAI;EAC3C,IAAIW,KAAK;EACT,IAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;IACxCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACxDb,QAAQ,CAAC;MACPC,IAAI,EAAEe,oBAAoB;MAC1BV,OAAO,EAAEK;IACX,CAAC,CAAC;EACJ,CAAC,MAAM;IACLX,QAAQ,CAAC;MACPC,IAAI,EAAEgB;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMf,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMG,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMI,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMO,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}