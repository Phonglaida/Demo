{"ast":null,"code":"import { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { constHostAddressConfig } from \"./commonData\";\nimport { ProcessMsgNewOrder, ProcessMsgStockTotal, ProcessMsgBoardInfo, ProcessMsgMoneyType, ProcessPeriodRemain, ProcessMsgCurrentTime, ProcessMsgMarketInfos, ProcessMsgReload } from './processMsgHelper';\nexport const wsMsgType = {\n  MsgNewOrder: \"NO\",\n  MsgReloadData: \"RL\"\n};\nexport const wsMsgSeparatorChar = {\n  DataSeparatorChar: \"*\",\n  PropSeparatorChar: \"|\",\n  ObjectSeparatorChar: \"$\"\n};\nconst wsReadyState = {\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3\n};\nlet wsClient = null;\nconst connectWS = () => {\n  if (wsClient === null || wsClient.readyState === wsReadyState.CLOSED) {\n    wsClient = new W3CWebSocket(constHostAddressConfig.WSHostAddress);\n    wsClient.onopen = () => {\n      console.log(\"WS Connected-\", new Date());\n      // sendMessage(`${wsMsgType.Req_Header}*${wsMsgType.Req_CurrentTime}`);\n      // sendMessage(`${wsMsgType.Req_Header}*${wsMsgType.Req_InitData}`);\n    };\n    wsClient.onmessage = evt => {\n      // console.log(evt.data);\n      OnReceiveMessage(evt.data);\n    };\n    wsClient.onerror = evt => {\n      console.log(evt);\n    };\n    wsClient.onclose = message => {\n      console.log(\"WS Disconnected-\", new Date());\n      connectWS();\n    };\n  }\n};\nconnectWS();\nexport const sendMessage = message => {\n  if (wsClient && wsClient.readyState === wsReadyState.OPEN) {\n    wsClient.send(message);\n    console.log(\"send \", message);\n  } else {\n    console.log(\"WS not opened\");\n  }\n};\n\n// Xu ly msg nhan dc\nconst OnReceiveMessage = rawMessage => {\n  const msgType = rawMessage.split('~')[0];\n  const msg = rawMessage.split('~')[1];\n  try {\n    if (msgType === wsMsgType.MsgNewOrder) {\n      ProcessMsgNewOrder(msg, true);\n    } else if (msgType === wsMsgType.MsgReloadData) {\n      ProcessMsgReload(msg, true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["w3cwebsocket","W3CWebSocket","constHostAddressConfig","ProcessMsgNewOrder","ProcessMsgStockTotal","ProcessMsgBoardInfo","ProcessMsgMoneyType","ProcessPeriodRemain","ProcessMsgCurrentTime","ProcessMsgMarketInfos","ProcessMsgReload","wsMsgType","MsgNewOrder","MsgReloadData","wsMsgSeparatorChar","DataSeparatorChar","PropSeparatorChar","ObjectSeparatorChar","wsReadyState","CONNECTING","OPEN","CLOSING","CLOSED","wsClient","connectWS","readyState","WSHostAddress","onopen","console","log","Date","onmessage","evt","OnReceiveMessage","data","onerror","onclose","message","sendMessage","send","rawMessage","msgType","split","msg","error"],"sources":["E:/làm hộ/Thực tập cuối/Shop_User/src/utils/websocketHelper.js"],"sourcesContent":["import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { constHostAddressConfig } from \"./commonData\";\r\n\r\nimport { ProcessMsgNewOrder, ProcessMsgStockTotal, ProcessMsgBoardInfo, ProcessMsgMoneyType, ProcessPeriodRemain, ProcessMsgCurrentTime, ProcessMsgMarketInfos, ProcessMsgReload } from './processMsgHelper';\r\n\r\nexport const wsMsgType = {\r\n    MsgNewOrder: \"NO\",\r\n    MsgReloadData: \"RL\",\r\n}\r\n\r\nexport const wsMsgSeparatorChar = {\r\n    DataSeparatorChar: \"*\",\r\n    PropSeparatorChar: \"|\",\r\n    ObjectSeparatorChar: \"$\",\r\n}\r\n\r\nconst wsReadyState = {\r\n    CONNECTING: 0,\r\n    OPEN: 1,\r\n    CLOSING: 2,\r\n    CLOSED: 3,\r\n};\r\n\r\nlet wsClient = null;\r\nconst connectWS = () => {\r\n    \r\n    if (wsClient === null || wsClient.readyState === wsReadyState.CLOSED) {\r\n        wsClient = new W3CWebSocket(constHostAddressConfig.WSHostAddress);\r\n\r\n        wsClient.onopen = () => {\r\n            console.log(\"WS Connected-\", new Date());\r\n            // sendMessage(`${wsMsgType.Req_Header}*${wsMsgType.Req_CurrentTime}`);\r\n            // sendMessage(`${wsMsgType.Req_Header}*${wsMsgType.Req_InitData}`);\r\n        };\r\n        wsClient.onmessage = (evt) => {\r\n            // console.log(evt.data);\r\n            OnReceiveMessage(evt.data);\r\n        };\r\n        wsClient.onerror = (evt) => {\r\n            console.log(evt);\r\n        };\r\n        wsClient.onclose = (message) => {\r\n            console.log(\"WS Disconnected-\", new Date());\r\n            connectWS();\r\n        };\r\n    }\r\n};\r\n\r\nconnectWS();\r\n\r\nexport const sendMessage = (message) => {\r\n    if (wsClient && wsClient.readyState === wsReadyState.OPEN) {\r\n        wsClient.send(message);\r\n        console.log(\"send \", message);\r\n    } else {\r\n        console.log(\"WS not opened\");\r\n    }\r\n};\r\n\r\n// Xu ly msg nhan dc\r\nconst OnReceiveMessage = (rawMessage) => {\r\n    const msgType = rawMessage.split('~')[0];\r\n    const msg = rawMessage.split('~')[1];\r\n\r\n    try {\r\n        if (msgType === wsMsgType.MsgNewOrder) {\r\n            ProcessMsgNewOrder(msg, true);\r\n        } else if (msgType === wsMsgType.MsgReloadData){\r\n            ProcessMsgReload(msg, true);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,IAAIC,YAAY,QAAQ,WAAW;AACxD,SAASC,sBAAsB,QAAQ,cAAc;AAErD,SAASC,kBAAkB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,gBAAgB,QAAQ,oBAAoB;AAE5M,OAAO,MAAMC,SAAS,GAAG;EACrBC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG;EAC9BC,iBAAiB,EAAE,GAAG;EACtBC,iBAAiB,EAAE,GAAG;EACtBC,mBAAmB,EAAE;AACzB,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE;AACZ,CAAC;AAED,IAAIC,QAAQ,GAAG,IAAI;AACnB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEpB,IAAID,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACE,UAAU,KAAKP,YAAY,CAACI,MAAM,EAAE;IAClEC,QAAQ,GAAG,IAAItB,YAAY,CAACC,sBAAsB,CAACwB,aAAa,CAAC;IAEjEH,QAAQ,CAACI,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC;MACxC;MACA;IACJ,CAAC;IACDP,QAAQ,CAACQ,SAAS,GAAIC,GAAG,IAAK;MAC1B;MACAC,gBAAgB,CAACD,GAAG,CAACE,IAAI,CAAC;IAC9B,CAAC;IACDX,QAAQ,CAACY,OAAO,GAAIH,GAAG,IAAK;MACxBJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IACpB,CAAC;IACDT,QAAQ,CAACa,OAAO,GAAIC,OAAO,IAAK;MAC5BT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC;MAC3CN,SAAS,CAAC,CAAC;IACf,CAAC;EACL;AACJ,CAAC;AAEDA,SAAS,CAAC,CAAC;AAEX,OAAO,MAAMc,WAAW,GAAID,OAAO,IAAK;EACpC,IAAId,QAAQ,IAAIA,QAAQ,CAACE,UAAU,KAAKP,YAAY,CAACE,IAAI,EAAE;IACvDG,QAAQ,CAACgB,IAAI,CAACF,OAAO,CAAC;IACtBT,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEQ,OAAO,CAAC;EACjC,CAAC,MAAM;IACHT,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC;AACJ,CAAC;;AAED;AACA,MAAMI,gBAAgB,GAAIO,UAAU,IAAK;EACrC,MAAMC,OAAO,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMC,GAAG,GAAGH,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEpC,IAAI;IACA,IAAID,OAAO,KAAK9B,SAAS,CAACC,WAAW,EAAE;MACnCT,kBAAkB,CAACwC,GAAG,EAAE,IAAI,CAAC;IACjC,CAAC,MAAM,IAAIF,OAAO,KAAK9B,SAAS,CAACE,aAAa,EAAC;MAC3CH,gBAAgB,CAACiC,GAAG,EAAE,IAAI,CAAC;IAC/B;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}